C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include <reg52.h>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int 
   5          
   6          sbit out=P1^5;						//发送IO口
   7          
   8          void delay(uint xms)				
   9          {
  10   1      	uint i,j;
  11   1      	for(i=xms;i>0;i--)				//i=xms即延时约xms毫秒
  12   1      		for(j=112;j>0;j--);
  13   1      }
  14          
  15          void delay560us(void)				//560us延迟函数			
  16          {
  17   1      	uint j;
  18   1      	for(j=63;j>0;j--);
  19   1      }
  20          
  21          void delay4500us(void)				//4.5ms延迟函数	
  22          {
  23   1        	uint j;
  24   1      	for(j=516;j>0;j--);
  25   1      }
  26          
  27          void khz_2(uint num)				//38KHZ脉冲 占空比1:2
  28          {
  29   1          for(;num>0;num--)
  30   1      	  out=~out;	
  31   1      } 
  32          
  33          void send0_a(void)					//发送0
  34          {  
  35   1         khz_2(42);
  36   1         out=1;
  37   1         delay560us();
  38   1      }
  39          
  40          void send1_a(void)					//发送1
  41          {  
  42   1         khz_2(42) ;
  43   1         out=1;
  44   1         delay560us();
  45   1         delay560us();
  46   1         delay560us();
  47   1      }
  48          
  49          void leadcode_a(void)				//发送引导码
  50          {
  51   1          khz_2(690) ;
  52   1      	out=1;
  53   1         	delay4500us();
  54   1      
  55   1      }
C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 2   

  56          
  57          void Send8Bit(uchar d)			  	//发送一字节数据
  58          {
  59   1          if(d&0x80){	send1_a();}
  60   1      	else{		send0_a();}
  61   1      	if(d&0x40){	send1_a();}
  62   1      	else{		send0_a();}
  63   1      	if(d&0x20){	send1_a();}
  64   1      	else{		send0_a();}
  65   1      	if(d&0x10){	send1_a();}
  66   1      	else{		send0_a();}
  67   1      	if(d&0x08){	send1_a();}
  68   1      	else{		send0_a();}
  69   1      	if(d&0x04){	send1_a();}
  70   1      	else{		send0_a();}
  71   1      	if(d&0x02){	send1_a();}
  72   1      	else{		send0_a();}
  73   1      	if(d&0x01){	send1_a();}
  74   1      	else{		send0_a();}
  75   1      }
  76          
  77          //数字摇控器
  78          //const uchar TabHL1[12]={0x30,0x18,0x7a,0x10,0x38,0x5a,0x42,0x4a,0x52,0x00,0xff,0xa6};//数据码码表1-9&2字
             -节用户码
  79          
  80          /* 奥力空调
  81           *
  82           * 用户码 0x01
  83           * S13电源 0x39		S09模式 0xB9 	S5风速 0x69 	S1温+ 0x29
  84           * S14睡眠 0xD9		S10定时 0xF9 	S6摆风 0x49 	S2温- 0xA9
  85           * 
  86           **/
  87          const uchar TabHL1[9]={0x01,0x39,0xD9,0xB9,0xF9,0x69,0x49,0x29,0xA9};//数据码码表&2字节用户码
  88          
  89          void usercode()	  					//发送用户码 00FF
  90          {
  91   1          Send8Bit(TabHL1[0]);
  92   1      	Send8Bit(~TabHL1[0]);
  93   1      }
  94          
  95          void xuexiban_13()					//0011 1001 - 39 电源
  96           {
  97   1          leadcode_a();
  98   1          usercode();
  99   1          Send8Bit(TabHL1[1]);
 100   1      	Send8Bit(~TabHL1[1]);
 101   1       }
 102          
 103           void xuexiban_14()					//1101 1001 - D9 睡眠
 104           {
 105   1           leadcode_a();
 106   1           usercode();
 107   1      	 Send8Bit(TabHL1[2]);
 108   1      	 Send8Bit(~TabHL1[2]);
 109   1       }
 110          
 111           void xuexiban_9()					//1011 1001 - B9 模式
 112           {
 113   1           leadcode_a();
 114   1           usercode();
 115   1      	 Send8Bit(TabHL1[3]);
 116   1      	 Send8Bit(~TabHL1[3]);
C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 3   

 117   1       }
 118          
 119           void xuexiban_10()					//1111 1001 - F9 定时
 120           {
 121   1           leadcode_a();
 122   1           usercode();
 123   1      	 Send8Bit(TabHL1[4]);
 124   1      	 Send8Bit(~TabHL1[4]);
 125   1       }
 126          
 127           void xuexiban_5()					//0100 1001 - 49 风速
 128           {
 129   1           leadcode_a();
 130   1           usercode();
 131   1      	 Send8Bit(TabHL1[5]);
 132   1      	 Send8Bit(~TabHL1[5]);
 133   1       }
 134          
 135           void xuexiban_6()					//0110 1001 - 69 摆风
 136           {
 137   1           leadcode_a();
 138   1           usercode();
 139   1      	 Send8Bit(TabHL1[6]);
 140   1      	 Send8Bit(~TabHL1[6]);
 141   1       }
 142          
 143           void xuexiban_1()					//0010 1001 - 29 温+
 144           {
 145   1           leadcode_a();
 146   1           usercode();
 147   1      	 Send8Bit(TabHL1[7]);
 148   1      	 Send8Bit(~TabHL1[7]);
 149   1       }
 150          
 151           void xuexiban_2()					//1010 1001 - A9 温-
 152           {
 153   1           leadcode_a();
 154   1           usercode();
 155   1           Send8Bit(TabHL1[8]);
 156   1      	 Send8Bit(~TabHL1[8]);
 157   1       }		
 158          	  
 159          
 160          void keyscan()				 		//按键扫描函数
 161          {
 162   1      	uchar temp;
 163   1      	P3=0xf0;
 164   1      	temp=P3;
 165   1          temp=temp&0xf0;
 166   1      	if(temp!=0xf0){
 167   2          
 168   2      		P3=0xfe;
 169   2      		temp=P3;
 170   2      		temp=temp&0xf0;
 171   2      		if(temp!=0xf0)
 172   2      		{
 173   3      		  delay(10);
 174   3      		  temp=P3;
 175   3      		  temp=temp&0xf0;
 176   3      		  if(temp!=0xf0)
 177   3      		  {
 178   4      			temp=P3;
C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 4   

 179   4      			switch(temp)
 180   4      			{
 181   5      			  case 0xee:
 182   5      				   xuexiban_1();
 183   5      				   xuexiban_1();			   
 184   5      				   break;
 185   5      			  case 0xde:
 186   5      				   xuexiban_2();
 187   5      				   xuexiban_2();
 188   5      				   break;
 189   5      			  //case 0xbe:
 190   5      			  //     xuexiban_3();
 191   5      			  //     break;
 192   5      			  //case 0x7e:
 193   5      			  //     xuexiban_4();
 194   5      			  //     break;
 195   5      			 }
 196   4      			 while(temp!=0xf0)
 197   4      			{ 
 198   5      			   temp=P3;
 199   5      			   temp=temp&0xf0;
 200   5      			}
 201   4      		  }
 202   3      		}
 203   2      		P3=0xfd;
 204   2      		temp=P3;
 205   2      		temp=temp&0xf0;
 206   2      		if(temp!=0xf0)
 207   2      		{
 208   3      		  delay(10);
 209   3      		  temp=P3;
 210   3      		  temp=temp&0xf0;
 211   3      		  if(temp!=0xf0)
 212   3      		  {
 213   4      			temp=P3;
 214   4      			switch(temp)
 215   4      			{
 216   5      			  case 0xed:
 217   5      				   xuexiban_5();
 218   5      				   xuexiban_5();
 219   5      				   break;
 220   5      			  case 0xdd:
 221   5      				   xuexiban_6();
 222   5      				   xuexiban_6();
 223   5      				   break;
 224   5      			  // case 0xbd:
 225   5      				   // xuexiban_7();
 226   5      				   // break;
 227   5      			  // case 0x7d:
 228   5      				   // xuexiban_8();
 229   5      				   // break;
 230   5      			}
 231   4      			 while(temp!=0xf0)
 232   4      			{
 233   5      			   temp=P3;
 234   5      			   temp=temp&0xf0; 
 235   5      			}
 236   4      		  }
 237   3      		}
 238   2      		P3=0xfb;
 239   2      		temp=P3;
 240   2      		temp=temp&0xf0;
C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 5   

 241   2      		if(temp!=0xf0)
 242   2      		{
 243   3      		  delay(10);
 244   3      		  temp=P3;
 245   3      		  temp=temp&0xf0;
 246   3      		  if(temp!=0xf0)
 247   3      		  {
 248   4      			temp=P3;
 249   4      			switch(temp)
 250   4      			{
 251   5      			  case 0xeb:
 252   5      				   xuexiban_9();
 253   5      				   xuexiban_9();
 254   5      				   break;
 255   5      			  case 0xdb:
 256   5      				   xuexiban_10();
 257   5      				   xuexiban_10();
 258   5      				   break;
 259   5      			  // case 0xbb:
 260   5      				   // xuexiban_11();
 261   5      				   // xuexiban_11();
 262   5      				   // break;
 263   5      			  // case 0x7b:
 264   5      				   // xuexiban_12();
 265   5      				   // xuexiban_12();
 266   5      				   // break;
 267   5      			}
 268   4      
 269   4      			 while(temp!=0xf0)
 270   4      			{
 271   5      			   temp=P3;
 272   5      			   temp=temp&0xf0;
 273   5      			}
 274   4      		  }
 275   3      		}
 276   2      		P3=0xf7;
 277   2      		temp=P3;
 278   2      		temp=temp&0xf0;
 279   2      		if(temp!=0xf0)
 280   2      		{
 281   3      		  delay(10);
 282   3      		  temp=P3;
 283   3      		  temp=temp&0xf0;
 284   3      		  if(temp!=0xf0)
 285   3      		  {
 286   4      			temp=P3;
 287   4      			switch(temp)
 288   4      			{
 289   5      			  case 0xe7:
 290   5      				   xuexiban_13();
 291   5      				   xuexiban_13();
 292   5      				   break;
 293   5      			  case 0xd7:
 294   5      				   xuexiban_14();
 295   5      				   xuexiban_14();
 296   5      				   break;
 297   5      			  // case 0xb7:
 298   5      				   // xuexiban_15();
 299   5      				   // xuexiban_15();
 300   5      				   // break;
 301   5      			  // case 0x77:
 302   5      				   // xuexiban_16();
C51 COMPILER V6.12  MAIN                                                                   08/08/2017 00:14:45 PAGE 6   

 303   5      				   // xuexiban_16();
 304   5      				   // break;
 305   5      			}
 306   4      
 307   4      			 while(temp!=0xf0)
 308   4      			{
 309   5      			   temp=P3;
 310   5      			   temp=temp&0xf0;
 311   5      			}
 312   4      		  }
 313   3      		}
 314   2      	}
 315   1      }	
 316          
 317          void main(void)
 318          {
 319   1         while(1)
 320   1             keyscan();
 321   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    672    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
